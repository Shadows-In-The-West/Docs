[{"title":"Getting Started","type":0,"sectionRef":"#","url":"docs/intro","content":"Getting Started","keywords":""},{"title":"Tech Stack","type":0,"sectionRef":"#","url":"docs/techStack","content":"Tech Stack Rojo &gt; Git &gt;","keywords":""},{"title":"event","type":0,"sectionRef":"#","url":"api/event","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"event","url":"api/event#functions","content":" "},{"title":"new​","type":1,"pageTitle":"event","url":"api/event#new","content":"&lt;/&gt; event.new() → event   "},{"title":"connect​","type":1,"pageTitle":"event","url":"api/event#connect","content":"&lt;/&gt; event:connect(callback: function(...any) → (...any)) → ()   "},{"title":"wait​","type":1,"pageTitle":"event","url":"api/event#wait","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; event:wait() → () Pauses the calling thread until the next time the event is fired. "},{"title":"garbageCollector","type":0,"sectionRef":"#","url":"api/garbageCollector","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"garbageCollector","url":"api/garbageCollector#functions","content":" "},{"title":"new​","type":1,"pageTitle":"garbageCollector","url":"api/garbageCollector#new","content":"&lt;/&gt; garbageCollector.new() → garbageCollector function @within garbageCollector "}]